{"version":3,"sources":["webpack:///./src/app/espace/banque/produit/paiement-blivraison/paiement-blivraison.component.html","webpack:///./src/app/espace/banque/produit/paiement-blivraison/paiement-blivraison.component.scss","webpack:///./src/app/espace/banque/produit/paiement-blivraison/paiement-blivraison.component.ts","webpack:///./src/app/espace/banque/produit/produit.module.ts","webpack:///./src/app/espace/banque/produit/suivi-produit/suivi-produit.component.html","webpack:///./src/app/espace/banque/produit/suivi-produit/suivi-produit.component.scss","webpack:///./src/app/espace/banque/produit/suivi-produit/suivi-produit.component.ts","webpack:///./src/app/espace/banque/produit/visu-blivraison/visu-blivraison.component.html","webpack:///./src/app/espace/banque/produit/visu-blivraison/visu-blivraison.component.scss","webpack:///./src/app/espace/banque/produit/visu-blivraison/visu-blivraison.component.ts"],"names":[],"mappings":"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","file":"espace-banque-produit-produit-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\">\\n    <div fxLayoutAlign=\\\"center center\\\">\\n      <span style=\\\"color:#3c9e1c\\\"><h1>PAIEMENT</h1></span> \\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n        <div fxFlex=\\\"70\\\">\\n          <div fxLayout=\\\"column\\\">\\n              <div>\\n                <fieldset>\\n                    {{fournisseur.prenom}} {{fournisseur.nom}} - <span style=\\\"font-size: 19px;\\\">{{agreement.juridique}}</span><br>\\n                    Tel/Fax : {{fournisseur.telephone}} <br>\\n                    NINEA : {{agreement.ninea}}\\n                </fieldset>\\n              </div>\\n              <div fxLayoutAlign=\\\"center center\\\" style=\\\"margin-top:3%\\\">\\n                <fieldset style=\\\"width:100%\\\">\\n                    <p> <span>OBJET : </span>{{bonLivraison.objet}}</p>\\n                </fieldset> \\n              </div>\\n              <div fxLayoutAlign=\\\"center center\\\">\\n                  <h2>Liste des produits</h2>\\n              </div>\\n              <div>\\n                  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n                      <!-- Checkbox Column -->\\n                      <ng-container matColumnDef=\\\"select\\\">\\n                        <th mat-header-cell *matHeaderCellDef>\\n                          <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                          </mat-checkbox>\\n                        </th>\\n                        <td mat-cell *matCellDef=\\\"let row\\\">\\n                          <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                        [checked]=\\\"selection.isSelected(row)\\\">\\n                          </mat-checkbox>\\n                        </td>\\n                      </ng-container>\\n                    \\n                      <!-- Name Column -->\\n                      <ng-container matColumnDef=\\\"code\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Code </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Weight Column -->\\n                      <ng-container matColumnDef=\\\"designation\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Designation </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.designation}} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Symbol Column -->\\n                      <ng-container matColumnDef=\\\"descriptionProduit\\\">\\n                        <th mat-header-cell *matHeaderCellDef> Description </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.descriptionProduit}} </td>\\n                      </ng-container>\\n          \\n                      <!-- Symbol Column -->\\n                      <ng-container matColumnDef=\\\"prixUnitaire\\\">\\n                          <th mat-header-cell *matHeaderCellDef> Prix </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prixUnitaire}} </td>\\n                        </ng-container>\\n    \\n                        <!-- Symbol Column -->\\n                      <ng-container matColumnDef=\\\"quantite\\\">\\n                          <th mat-header-cell *matHeaderCellDef> Quantité </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.zoneGeographiqueId}} </td>\\n                        </ng-container>\\n                    \\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                          (click)=\\\"selection.toggle(row)\\\">\\n                      </tr>\\n                  </table>\\n              </div>\\n              <div fxLayoutAlign=\\\"end right\\\" style=\\\"font-size:20px\\\"><span>Prix total : </span><span style=\\\"color:red\\\">{{totalArticle}} XOF</span></div>\\n          </div>\\n          \\n    \\n        </div>\\n        <div fxFlex=\\\"30\\\">\\n            <div fxLayout=\\\"column\\\" fxLayouAlign=\\\"center center\\\">\\n                <div fxLayoutAlign=\\\"center center\\\">\\n                    <h2>Detais paiement</h2>\\n                </div>\\n                <mat-card>\\n                    <div style=\\\"width:100%\\\">\\n                        Mode livraison : {{bonLivraison.modeLivraison}}\\n                    </div> \\n                </mat-card>\\n                &nbsp;\\n                <mat-card>\\n                    <div style=\\\"width:100%\\\">\\n                        Livreur : {{livreur.prenom}} {{livreur.nom}}  - {{livreur.telephone}}\\n                    </div>\\n                </mat-card>\\n            </div>\\n        </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex=\\\"68\\\">\\n            <fieldset>\\n              <legend>Informations agent</legend>\\n              <div fxLayout=\\\"column\\\">\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n                      <div>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <input matInput  disabled value={{utilisateur.lastName}}>\\n                          </mat-form-field>\\n                      </div>\\n                      <div>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <input matInput  disabled value='{{utilisateur.firstName}}'>\\n                          </mat-form-field>\\n                      </div>     \\n                  </div>\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n                      <div>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <input matInput  disabled value={{utilisateur.mail}}>\\n                          </mat-form-field>\\n                      </div>\\n                      <div>\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                              <input matInput  disabled value='{{utilisateur.phoneNumber}}'>\\n                          </mat-form-field>\\n                      </div> \\n      \\n                  </div>\\n              </div>\\n            </fieldset>\\n        </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n        <div fxFlex=\\\"68\\\">\\n            <fieldset>\\n              <legend>Mode paiement</legend>\\n              <div fxLayout=\\\"column\\\">\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n                      <div>\\n                          <section class=\\\"example-section\\\">\\n                              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"showTicks\\\">Paiement à la livraison</mat-checkbox>\\n                            </section>\\n                      </div>    \\n                  </div>\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n                      <div>\\n                          <section class=\\\"example-section\\\">\\n                              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"wari\\\">Wari</mat-checkbox>\\n                              <mat-form-field class=\\\"example-margin\\\" *ngIf=\\\"wari\\\">\\n                                <input matInput   value=''>\\n                              </mat-form-field>\\n                            </section>\\n                      </div>    \\n                  </div> \\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n                      <div>\\n                          <section class=\\\"example-section\\\">\\n                              <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"om\\\">Orange Money</mat-checkbox>\\n                              <mat-form-field class=\\\"example-margin\\\" *ngIf=\\\"om\\\">\\n                                <input matInput   value=''>\\n                              </mat-form-field>\\n                            </section>\\n                      </div>    \\n                  </div> \\n              </div>\\n            </fieldset>\\n        </div>\\n    </div>\\n    \\n</div>\\n\\n\\n  \\n  \\n  \"","module.exports = \"table {\\n  width: 100%; }\\n\\n.price {\\n  color: red;\\n  font-size: 11px; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\\n.mat-slider-horizontal {\\n  width: 300px; }\\n\\n.mat-slider-vertical {\\n  height: 300px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Utilisateur } from 'app/models/user/utilisateur/utilisateur.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BonLivraison } from 'app/models/msmagasindomains/bon-livraison/bon-livraison.model';\nimport { Fournisseur } from 'app/models/acteur/fournisseur/fournisseur.model';\nimport { MatTableDataSource } from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { Agreement } from 'app/models/acteur/agreement/agreement.model';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\n\n\nexport interface PeriodicElement {\n  code: string;\n  designation: string;\n  description: string;\n  prix: string;\n\n}\n@Component({\n  selector: 'app-paiement-blivraison',\n  templateUrl: './paiement-blivraison.component.html',\n  styleUrls: ['./paiement-blivraison.component.scss']\n})\nexport class PaiementBlivraisonComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'designation', 'descriptionProduit', 'prixUnitaire', 'quantite'];\n  dataSource = new MatTableDataSource<any>();\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  bonLivraison = {} as BonLivraison;\n  fournisseur = {} as Fournisseur;\n  produitDemande  = [];\n  produitList = [];\n  utilisateur : any;\n  livreur : any;\n  agreement : any;\n  totalArticle : number = 0;\n  private produitPath = 'list-produits-db'\n  private selectedProduitPath = 'produits-db'\n\n  constructor(private   blivraisonServ: BlivraisonService,\n    public db: AngularFireDatabase,private session: SessionStorageService, private router : Router, private activatedRoute : ActivatedRoute) { \n      \n      this.router = router;\n      var key = this.activatedRoute.snapshot.paramMap.get('id');\n      this.utilisateur = session.get(\"utilisateur\");\n\n      this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(key))\n      .valueChanges()\n      .subscribe(res => {\n        this.bonLivraison =  res[0] as BonLivraison;\n        \n        this.db.list('utilisateur-db', tr =>tr\n        .orderByChild(\"fkey\")\n        .equalTo(this.bonLivraison.acteurUserId))\n        .valueChanges()\n        .subscribe(tf => {\n        console.log(tf)\n      })\n\n        this.db.list('agreement-db', tr =>tr\n        .orderByChild(\"userID\")\n        .equalTo(this.bonLivraison.acteurUserId))\n        .valueChanges()\n        .subscribe(tf => {\n        this.agreement = tf[0];\n      })\n\n      this.db.list(\"fournisseur-db\", db => db\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.livreur))\n      .valueChanges()\n      .subscribe(res => {\n        this.livreur = res[0] as Fournisseur;\n      })\n\n      this.db.list(\"fournisseur-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.fournisseurId))\n      .valueChanges()\n      .subscribe(res => {\n        this.fournisseur = res[0] as Fournisseur;\n        this.db.list('utilisateur-db', tr =>tr\n        .orderByChild(\"fkey\")\n        .equalTo(this.fournisseur.key))\n        .valueChanges()\n        .subscribe(tf => {        \n            this.db.list(\"agreement-db\", db => db\n            .orderByChild('userID')\n            .equalTo(tf[0]['key']))\n            .valueChanges()\n            .subscribe(res => {\n              this.agreement = res[0] as Agreement;\n            })\n      })\n\n\n        this.db.list(this.produitPath, ref => ref\n          .orderByChild('keyDemande')\n          .equalTo(this.bonLivraison.demandeId))\n          .valueChanges()\n          .subscribe(result => {\n            this.produitDemande = result ;\n            this.produitDemande.forEach(t =>{\n              this.db.list(this.selectedProduitPath, refSP => refSP\n                .orderByChild('key')\n                .equalTo(t.keyProd))\n                .valueChanges()\n                .subscribe(prod => {\n                  const data = this.dataSource.data;\n                  prod[0]['zoneGeographiqueId'] = t.quantite;\n                  this.totalArticle = this.totalArticle + prod[0]['zoneGeographiqueId'] * prod[0]['prixUnitaire'];\n                  data.push(prod[0]);\n                  this.dataSource.data = data;  \n                })\n            })\n          })\n        })\n      })\n    }\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected === numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n  ngOnInit() {\n  }\n\n  autoTicks = false;\n  disabled = false;\n  invert = false;\n  max = 100;\n  min = 0;\n  showTicks = false;\n  wari = false\n  om = false\n  step = 1;\n  thumbLabel = false;\n  value = 0;\n  vertical = false;\n\n  get tickInterval(): number | 'auto' {\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n  }\n  set tickInterval(value) {\n    this._tickInterval = coerceNumberProperty(value);\n  }\n  private _tickInterval = 1;\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SuiviProduitComponent } from './suivi-produit/suivi-produit.component';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { VisuBlivraisonComponent } from './visu-blivraison/visu-blivraison.component';\nimport { PaiementBlivraisonComponent } from './paiement-blivraison/paiement-blivraison.component';\n\nexport const routes = [\n  { path: '', component: SuiviProduitComponent, pathMatch: 'full' },\n  { path: 'visu-blivraison/:id', component: VisuBlivraisonComponent, pathMatch: 'full' },\n  { path: 'paiement-blivraison/:id', component: PaiementBlivraisonComponent, pathMatch: 'full' }\n\n\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FuseSharedModule,\n    SharedModule,\n  \n  ],\n  declarations: [SuiviProduitComponent, VisuBlivraisonComponent, PaiementBlivraisonComponent]\n})\nexport class ProduitModule { }\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n    <div>\\n      <h2 class=\\\"title\\\">LIVRAISON</h2>\\n    </div>\\n  </div>\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"objet\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Objet </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.objet}} </td>\\n      </ng-container>\\n  \\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"nomAcheteur\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom acheteur </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.acheteurNom}} {{row.acheteurPrenom}}</td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date creation </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateCreation}} </td>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"Details\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Details </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <div>\\n              <button mat-icon-button mat-raised-button [routerLink]=\\\"['/produit-banq','visu-blivraison',row.key]\\\">\\n                <mat-icon style=\\\"color:red\\\">visibility</mat-icon>\\n            </button>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"paiement\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Paiement </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n            <div *ngIf=\\\"row.isValid === true\\\">\\n                <button mat-icon-button mat-raised-button [routerLink]=\\\"['/produit-banq','paiement-blivraison',row.key]\\\">\\n                  <mat-icon style=\\\"color:goldenrod\\\">attach_money</mat-icon>\\n                </button>\\n            </div> \\n            <div *ngIf=\\\"row.isValid === false\\\">\\n                <button mat-icon-button mat-raised-button [routerLink]=\\\"['.']\\\">\\n                  <mat-icon style=\\\"color:goldenrod\\\">money_off</mat-icon>\\n                </button>\\n            </div> \\n          </td>\\n        </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"valider\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n            <div *ngIf=\\\"row.isValid === true\\\">\\n                <button mat-icon-button mat-raised-button>\\n                  <mat-icon>done_all</mat-icon>\\n                </button>\\n            </div>`\\n            <div *ngIf=\\\"row.isValid === false\\\">\\n              <span style=\\\"color:red\\\">en attente de validation</span>                 \\n            </div>\\n          <!-- <button mat-icon-button (click)=\\\"validate(row.key)\\\">\\n            <mat-icon>done_all</mat-icon>\\n          </button> -->\\n        </td>\\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #134ae4ba; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { CrudPopupComponent } from 'app/shared-front/shared/crudPopups/crudPopup/crudPopup.component';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-suivi-produit',\n  templateUrl: './suivi-produit.component.html',\n  styleUrls: ['./suivi-produit.component.scss']\n})\nexport class SuiviProduitComponent implements OnInit {\n\n  displayedColumns: string[] = ['objet', 'nomAcheteur', 'date', 'Details', 'paiement','valider'];\n  dataSource = new MatTableDataSource<any>();\n \n  crudComp: CrudPopupComponent;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  blivraisonService : BlivraisonService;\n\n\n  constructor(private parCrud: CrudPopupComponent, \n    private   blivraisonServ: BlivraisonService,\n    public db: AngularFireDatabase)\n    {\n      this.crudComp=this.parCrud;\n      this.blivraisonService = blivraisonServ; \n      this.db.list(\"blivraison-db\", ref => ref\n        .orderByChild('isValid')\n        .equalTo(true))\n        .valueChanges()\n        .subscribe(res => {\n          this.dataSource.data = res;\n        });\n    }\n    ngOnInit() {\n  \n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  \n    applyFilter(filterValue: string) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  \n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  \n    validate(key){\n      this.blivraisonServ.updateBlivraison(key,{isValid:true})\n    }\n    ELEMENT_DATA: CommandeElement[] = [];\n  } \n  \n  export interface CommandeElement {\n    NoLivraison: string;\n    Emetteur: string;\n    Date_Emission: string;\n    Reglement: string;\n    Details: string;\n    paiement :string;\n    Modifier: string;\n    Supprimer: string;\n  }\n  ","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n    <div fxFlex=\\\"70\\\">\\n      <div fxLayout=\\\"column\\\">\\n          <div>\\n            <fieldset>\\n                {{fournisseur.prenom}} {{fournisseur.nom}} - <span style=\\\"font-size: 19px;\\\">{{agreement.juridique}}</span><br>\\n                Tel/Fax : {{fournisseur.telephone}} <br>\\n                NINEA : {{agreement.ninea}}\\n            </fieldset>\\n          </div>\\n          <div fxLayoutAlign=\\\"center center\\\" style=\\\"margin-top:3%\\\">\\n            <fieldset style=\\\"width:100%\\\">\\n                <p> <span>OBJET : </span>{{bonLivraison.objet}}</p>\\n            </fieldset> \\n          </div>\\n          <div fxLayoutAlign=\\\"center center\\\">\\n              <h2>Liste des produits</h2>\\n          </div>\\n          <div>\\n              <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n                  <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"select\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                      </mat-checkbox>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\n                      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                    [checked]=\\\"selection.isSelected(row)\\\">\\n                      </mat-checkbox>\\n                    </td>\\n                  </ng-container>\\n                \\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"code\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Code </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"designation\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Designation </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.designation}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"descriptionProduit\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Description </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.descriptionProduit}} </td>\\n                  </ng-container>\\n      \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"prixUnitaire\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Prix </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prixUnitaire}} </td>\\n                    </ng-container>\\n\\n                    <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"quantite\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Quantité </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.zoneGeographiqueId}} </td>\\n                    </ng-container>\\n                \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                      (click)=\\\"selection.toggle(row)\\\">\\n                  </tr>\\n              </table>\\n          </div>\\n          <div fxLayoutAlign=\\\"end right\\\" style=\\\"font-size:20px\\\"><span>Prix total : </span><span style=\\\"color:red\\\">{{totalArticle}} XOF</span></div>\\n      </div>\\n      \\n\\n    </div>\\n    <div fxFlex=\\\"30\\\">\\n        <div fxLayout=\\\"column\\\" fxLayouAlign=\\\"center center\\\">\\n            <div fxLayoutAlign=\\\"center center\\\">\\n                <h2>Detais paiement</h2>\\n            </div>\\n            <mat-card>\\n                <div style=\\\"width:100%\\\">\\n                    Mode livraison : {{bonLivraison.modeLivraison}}\\n                </div> \\n            </mat-card>\\n            &nbsp;\\n            <mat-card>\\n                <div style=\\\"width:100%\\\">\\n                    Livreur : {{livreur.prenom}} {{livreur.nom}}  - {{livreur.telephone}}\\n                </div>\\n            </mat-card>\\n        </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \"","module.exports = \"table {\\n  width: 100%; }\\n\\n.price {\\n  color: red;\\n  font-size: 11px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Utilisateur } from 'app/models/user/utilisateur/utilisateur.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BonLivraison } from 'app/models/msmagasindomains/bon-livraison/bon-livraison.model';\nimport { Fournisseur } from 'app/models/acteur/fournisseur/fournisseur.model';\nimport { MatTableDataSource } from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { Agreement } from 'app/models/acteur/agreement/agreement.model';\n\n\nexport interface PeriodicElement {\n  code: string;\n  designation: string;\n  description: string;\n  prix: string;\n\n}\n\n@Component({\n  selector: 'app-visu-blivraison',\n  templateUrl: './visu-blivraison.component.html',\n  styleUrls: ['./visu-blivraison.component.scss']\n})\nexport class VisuBlivraisonComponent implements OnInit {\n\n  displayedColumns: string[] = ['code', 'designation', 'descriptionProduit', 'prixUnitaire', 'quantite'];\n  dataSource = new MatTableDataSource<any>();\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  bonLivraison = {} as BonLivraison;\n  fournisseur = {} as Fournisseur;\n  produitDemande  = [];\n  produitList = [];\n  utilisateur : any;\n  livreur : any;\n  agreement : any;\n  totalArticle : number = 0;\n  private produitPath = 'list-produits-db'\n  private selectedProduitPath = 'produits-db'\n\n  constructor(private   blivraisonServ: BlivraisonService,\n    public db: AngularFireDatabase,private session: SessionStorageService, private router : Router, private activatedRoute : ActivatedRoute) { \n      \n      this.router = router;\n      var key = this.activatedRoute.snapshot.paramMap.get('id');\n      this.utilisateur = session.get(\"utilisateur\");\n\n      this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(key))\n      .valueChanges()\n      .subscribe(res => {\n        this.bonLivraison =  res[0] as BonLivraison;\n        \n        this.db.list('utilisateur-db', tr =>tr\n        .orderByChild(\"fkey\")\n        .equalTo(this.bonLivraison.acteurUserId))\n        .valueChanges()\n        .subscribe(tf => {\n        console.log(tf)\n      })\n\n        this.db.list('agreement-db', tr =>tr\n        .orderByChild(\"userID\")\n        .equalTo(this.bonLivraison.acteurUserId))\n        .valueChanges()\n        .subscribe(tf => {\n        this.agreement = tf[0];\n      })\n\n      this.db.list(\"fournisseur-db\", db => db\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.livreur))\n      .valueChanges()\n      .subscribe(res => {\n        this.livreur = res[0] as Fournisseur;\n      })\n\n      this.db.list(\"fournisseur-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.fournisseurId))\n      .valueChanges()\n      .subscribe(res => {\n        this.fournisseur = res[0] as Fournisseur;\n        this.db.list('utilisateur-db', tr =>tr\n        .orderByChild(\"fkey\")\n        .equalTo(this.fournisseur.key))\n        .valueChanges()\n        .subscribe(tf => {        \n            this.db.list(\"agreement-db\", db => db\n            .orderByChild('userID')\n            .equalTo(tf[0]['key']))\n            .valueChanges()\n            .subscribe(res => {\n              this.agreement = res[0] as Agreement;\n            })\n      })\n\n\n        this.db.list(this.produitPath, ref => ref\n          .orderByChild('keyDemande')\n          .equalTo(this.bonLivraison.demandeId))\n          .valueChanges()\n          .subscribe(result => {\n            this.produitDemande = result ;\n            this.produitDemande.forEach(t =>{\n              this.db.list(this.selectedProduitPath, refSP => refSP\n                .orderByChild('key')\n                .equalTo(t.keyProd))\n                .valueChanges()\n                .subscribe(prod => {\n                  const data = this.dataSource.data;\n                  prod[0]['zoneGeographiqueId'] = t.quantite;\n                  this.totalArticle = this.totalArticle + prod[0]['zoneGeographiqueId'] * prod[0]['prixUnitaire'];\n                  data.push(prod[0]);\n                  this.dataSource.data = data;  \n                })\n            })\n          })\n        })\n      })\n    }\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected === numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}