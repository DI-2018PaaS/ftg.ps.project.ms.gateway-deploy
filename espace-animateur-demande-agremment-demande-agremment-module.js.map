{"version":3,"sources":["webpack:///./src/app/espace/animateur/demande-agremment/demande-agremment.module.ts","webpack:///./src/app/espace/animateur/demande-agremment/demande-agremment/demande-agremment.component.html","webpack:///./src/app/espace/animateur/demande-agremment/demande-agremment/demande-agremment.component.scss","webpack:///./src/app/espace/animateur/demande-agremment/demande-agremment/demande-agremment.component.ts"],"names":[],"mappings":"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","file":"espace-animateur-demande-agremment-demande-agremment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DemandeAgremmentComponent } from './demande-agremment/demande-agremment.component';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\n\nexport const routes = [\n  { \n    path: '', \n    component: DemandeAgremmentComponent, \n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FuseSharedModule,\n    SharedModule,\n    MatBadgeModule,\n    MatInputModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DemandeAgremmentComponent]\n})\nexport class DemandeAgremmentModule { }\n","module.exports = \"  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n    <div><h2 class=\\\"title\\\">Liste des demandes d'agrément</h2></div>\\n  </div>\\n  <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtrer\\\">\\n    </mat-form-field>\\n    \\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"userName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.userName}} </td>\\n          </ng-container>\\n\\n          <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"userPrenom\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Prénom </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.userPrenom}} </td>\\n          </ng-container>\\n    \\n          <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"juridique\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut juridique </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.juridique}} </td>\\n      </ng-container>\\n\\n      <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"ninea\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Ninea </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ninea}} </td>\\n      </ng-container>\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"description\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n        </ng-container>\\n\\n        <!-- ID Column -->\\n        <!-- <ng-container matColumnDef=\\\"destinataireID\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Destinataire </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.destinataireID}} </td>\\n          </ng-container> -->\\n\\n          <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"dateCreated\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date de creation </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{ row.dateCreated | date : format : shortDate}} </td>\\n          </ng-container>\\n    \\n        <!-- Color Column -->\\n        <!-- <ng-container matColumnDef=\\\"Supprimer\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header > Supprimer </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" > {{row.Supprimer}}\\n            <button mat-raised-button>\\n              <mat-icon class=\\\"red600\\\">delete</mat-icon>\\n            </button>\\n          </td>\\n        </ng-container> -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\n          </ng-container>\\n        <ng-container matColumnDef=\\\"Approuver\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header > Approuver </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" > {{row.Approuver}}\\n              <button mat-raised-button (click)=\\\"approuverDemande(row.key,row.userID)\\\">\\n                <mat-icon class=\\\"green\\\">done_outline</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"Rejeter\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header > Rejeter </th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" > {{row.Rejeter}}\\n                <button mat-raised-button (click)=\\\"rejeterDemande(row.key,row.userID)\\\">\\n                  <mat-icon class=\\\"red600\\\">delete</mat-icon>\\n                </button>\\n              </td>\\n            </ng-container>\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n      </table>\\n    \\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #9a3838ba; }\\n\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { CrudPopupComponent } from 'app/shared-front/shared/crudPopups/crudPopup/crudPopup.component';\nimport { Agreement } from 'app/models/acteur/agreement/agreement.model';\nimport { AngularFireList } from 'angularfire2/database';\nimport { AgreementService } from 'app/service/agreement.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { RegistrationService } from 'app/service/registration.service';\nimport {MatSnackBar} from '@angular/material';\nimport * as Lodash from 'lodash';\n\n@Component({\n  selector: 'app-demande-agremment',\n  templateUrl: './demande-agremment.component.html',\n  styleUrls: ['./demande-agremment.component.scss']\n})\nexport class DemandeAgremmentComponent implements OnInit {\n\n  displayedColumns: string[] = ['userName','userPrenom','juridique','ninea','description','dateCreated', 'status','Approuver','Rejeter'];\n  dataSource = new MatTableDataSource<any>();\n  agreementList = []\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  crudComp: CrudPopupComponent;\n  private dbPath = 'agreement-db';\n\n  agreement = {} as Agreement;\n  agreementRef$ : AngularFireList<Agreement>;\n\n  constructor(private agreementService: AgreementService,public snackBar: MatSnackBar,private utilisateurService: RegistrationService, private parCrud: CrudPopupComponent, public db: AngularFireDatabase) {\n    console.log(this.agreementService.getAgreementList())\n    this.crudComp = this.parCrud;\n    // this.agreementService.getAgreementList().valueChanges().subscribe(res => {\n    //   this.agreementList.push(res);\n    //   this.dataSource.data = res;\n    // })\n    \n    this.db.list(this.dbPath, ref => ref\n      .orderByChild('destinataireID')\n      .equalTo(\"animateur\"))\n      .valueChanges()\n      .subscribe(res => {\n        this.agreementList.push(res);\n        this.dataSource.data = res;\n      })\n\n      console.log(this.agreementList.filter(item => item.Statut === \"\") )\n\n   }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort; \n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  ajoutDemandeAgrement(){\n    this.crudComp.openCreateDemandeAgreement();\n  }\n  ELEMENT_DATA: AgreementElement[] = this.agreementList;\n\n  approuverDemande(key: string,userID: string): void{\n    this.agreementService.updateAgreement(key,{status:\"approuver\"});\n    this.utilisateurService.isAgreeUtilisateur(userID,{isagreer:\"true\"});\n    let refSnack = this.snackBar.open('Agrément avalidé avec succès','merci', {\n      duration: 3000\n    });\n    refSnack.afterDismissed().subscribe(()=>{\n    }) \n   }\n\n   rejeterDemande(key: string,userID: string): void{\n    this.agreementService.updateAgreement(key,{status:\"rejeter\"});\n    this.utilisateurService.isAgreeUtilisateur(userID,{isagreer:\"rejeter\"});\n    let refSnack = this.snackBar.open('Agrément rejeté','merci', {\n      duration: 3000\n    });\n    refSnack.afterDismissed().subscribe(()=>{\n    }) \n   }\n\n}\n\nexport interface AgreementElement {\n    description: string;\n    destinataireID: string;\n    dateCreated: string;\n    \n}"],"sourceRoot":""}