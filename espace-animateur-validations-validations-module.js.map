{"version":3,"sources":["webpack:///./src/app/espace/animateur/validations/boutique/boutique.component.html","webpack:///./src/app/espace/animateur/validations/boutique/boutique.component.scss","webpack:///./src/app/espace/animateur/validations/boutique/boutique.component.ts","webpack:///./src/app/espace/animateur/validations/liste-validation/liste-validation.component.html","webpack:///./src/app/espace/animateur/validations/liste-validation/liste-validation.component.scss","webpack:///./src/app/espace/animateur/validations/liste-validation/liste-validation.component.ts","webpack:///./src/app/espace/animateur/validations/magasin/magasin.component.html","webpack:///./src/app/espace/animateur/validations/magasin/magasin.component.scss","webpack:///./src/app/espace/animateur/validations/magasin/magasin.component.ts","webpack:///./src/app/espace/animateur/validations/produit/produit.component.html","webpack:///./src/app/espace/animateur/validations/produit/produit.component.scss","webpack:///./src/app/espace/animateur/validations/produit/produit.component.ts","webpack:///./src/app/espace/animateur/validations/validations.module.ts"],"names":[],"mappings":"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","file":"espace-animateur-validations-validations-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n  <div>\\n    <h2 class=\\\"title\\\">LISTE BOUTIQUES A VALIDER</h2>\\n  </div>\\n</div>\\n<div class=\\\"py-8\\\"><button mat-raised-button color=\\\"accent\\\" >Ajouter une Boutique</button></div>\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"nom\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> nom </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nom}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"ref\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ref </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ref}} </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> description </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n    </ng-container>\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"no\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> no </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.no}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"rue\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> rue </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.rue}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"codep\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> codep </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codep}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"ville\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ville </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ville}} </td>\\n      </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"Valider\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Valider </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Valider}}\\n        <button mat-raised-button >\\n          <mat-icon class=\\\"orange600\\\">check_circle_outline</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"Supprimer\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header > Supprimer </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\" > {{row.Supprimer}}\\n        <button mat-raised-button>\\n          <mat-icon class=\\\"red600\\\">delete</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #9a3838ba; }\\n\"","import { Component, OnInit,ViewChild,Input } from '@angular/core';\nimport { Boutique } from 'app/models/msmagasindomains/boutique/boutique.model';\nimport { BoutiqueService } from 'app/service/boutique.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { AngularFireList } from 'angularfire2/database';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-boutique',\n  templateUrl: './boutique.component.html',\n  styleUrls: ['./boutique.component.scss']\n})\nexport class BoutiqueComponent implements OnInit {\n\n  displayedColumns: string[] = ['nom', 'ref', 'description','no','rue', 'codep','ville','Valider'];\n  dataSource = new MatTableDataSource<any>();\n  private dbPath = 'boutique-db';\n  boutiqueList = []\n  boutiqueRef: AngularFireList<Boutique> = null;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Input() rowProperty: any;\n  boutique = {} as Boutique;\n  boutiqueRef$ : AngularFireList<Boutique>;\n\n  constructor(private boutiqueService: BoutiqueService, public db: AngularFireDatabase) {\n this.boutiqueService.getBoutiqueList().valueChanges().subscribe(res => {\n      this.boutiqueList.push(res);\n      this.dataSource.data = res;\n      console.log(this.dataSource.data);\n    });\n  }\n  ngOnInit() {\n    \n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n \n \n  ELEMENT_DATA: BoutiqueElement[] = this.boutiqueList;\n}\n\nexport interface BoutiqueElement {\n    key: string;\n    nIdProprietaire: number;\n    nom: string;\n    ref: string;\n    description: string;\n    no: String;\n    rue: String;\n    codep: String;\n    ville: String;\n    isValid:boolean;\n    Valider:string;\n}\n\n","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutGap=\\\"30px\\\" class=\\\"px-24\\\">\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\" fxLayout.xs=\\\"column\\\">\\n    <a [routerLink]=\\\"['boutique-list']\\\" fxFlex=\\\"50\\\" class=\\\"panel\\\">\\n      <div>\\n          <span class=\\\"title\\\">Boutique</span>\\n      </div>\\n    </a>\\n    <a [routerLink]=\\\"['produit-list']\\\" fxFlex=\\\"50\\\" class=\\\"panel\\\">\\n      <div>\\n        <span class=\\\"title\\\">Produit </span>\\n      </div>\\n    </a>\\n    <a [routerLink]=\\\"['magasin-list']\\\" fxFlex=\\\"50\\\" class=\\\"panel\\\">\\n      <div>\\n        <span class=\\\"title\\\">Magasin </span>\\n      </div>\\n    </a>\\n  \\n  </div>\\n</div>\\n\\n\"","module.exports = \".title {\\n  font-size: 100%;\\n  font-weight: bold;\\n  text-transform: uppercase; }\\n\\n.elmt-content {\\n  padding: 5px;\\n  background-color: rgba(131, 131, 182, 0.288); }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.panel {\\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\\n  padding: 3%;\\n  text-decoration: none;\\n  background-color: #9A3838;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-liste-validation',\n  templateUrl: './liste-validation.component.html',\n  styleUrls: ['./liste-validation.component.scss']\n})\nexport class ListeValidationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n  <div>\\n    <h2 class=\\\"title\\\">LISTE MAGASINS A VALIDER</h2>\\n  </div>\\n</div>\\n<div class=\\\"py-8\\\"><button mat-raised-button color=\\\"accent\\\" >Ajouter un Magasin</button></div>\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"nom\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> nom </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nom}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"ref\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ref </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.ref}} </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"adresse\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> adresse </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.adresse}} </td>\\n    </ng-container>\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> description </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> email </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </td>\\n      </ng-container>\\n   \\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"Valider\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Valider </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Valider}}\\n        <button mat-raised-button >\\n          <mat-icon class=\\\"orange600\\\">check_circle_outline</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #9a3838ba; }\\n\"","import { Component, OnInit,ViewChild,Input } from '@angular/core';\nimport { Magasin } from 'app/models/msmagasindomains/magasin/magasin.model';\nimport { MagasinService } from 'app/service/magasin.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { AngularFireList } from 'angularfire2/database';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-magasin',\n  templateUrl: './magasin.component.html',\n  styleUrls: ['./magasin.component.scss']\n})\nexport class MagasinComponent implements OnInit {\n  displayedColumns: string[] = ['nom', 'ref', 'adresse','description','email', 'Valider'];\n  dataSource = new MatTableDataSource<any>();\n  private dbPath = 'magasin-db';\n  magasinList = []\n  produitRef: AngularFireList<Magasin> = null;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Input() rowProperty: any;\n  magasin = {} as Magasin;\n  magasinRef$ : AngularFireList<Magasin>;\n\n  constructor(private magasinService: MagasinService, public db: AngularFireDatabase) {\n this.magasinService.getMagasinList().valueChanges().subscribe(res => {\n      this.magasinList.push(res);\n      this.dataSource.data = res;\n      console.log(this.dataSource.data);\n    });\n  }\n  ngOnInit() {\n    \n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n \n \n  ELEMENT_DATA: MagasinElement[] = this.magasinList;\n}\n\nexport interface MagasinElement {\n    key: string;\n    nom: string;\n    ref: string;\n    adresse: string;\n    description: string;\n    email: string;\n    isValid:boolean;\n    Valider:string;\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n  <div>\\n    <h2 class=\\\"title\\\">LISTE PRODUITS A VALIDER</h2>\\n  </div>\\n</div>\\n<div class=\\\"py-8\\\"><button mat-raised-button color=\\\"accent\\\" >Ajouter un Produit</button></div>\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    <!-- Progress Column -->\\n    <ng-container matColumnDef=\\\"code\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> code </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.code}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"designation\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> designation </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.designation}} </td>\\n    </ng-container>\\n\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> description </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}} </td>\\n    </ng-container>\\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"prixUnitaire\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> prixUnitaire </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prixUnitaire}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"descriptionProduit\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> descriptionProduit </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.descriptionProduit}} </td>\\n      </ng-container>\\n       <!-- Color Column -->\\n       <ng-container matColumnDef=\\\"zoneGeographiqueId\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> zoneGeographiqueId </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.zoneGeographiqueId}} </td>\\n      </ng-container>\\n    <!-- Color Column -->\\n    <ng-container matColumnDef=\\\"Valider\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Valider </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Valider}}\\n        <button mat-raised-button >\\n          <mat-icon class=\\\"orange600\\\">check_circle_outline</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #9a3838ba; }\\n\"","import { Component, OnInit,ViewChild,Input } from '@angular/core';\nimport { Produit } from 'app/models/msmagasindomains/produit/produit.model';\nimport { ProduitService } from 'app/service/produit.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { AngularFireList } from 'angularfire2/database';\nimport { AngularFireDatabase } from 'angularfire2/database';\n@Component({\n  selector: 'app-produit',\n  templateUrl: './produit.component.html',\n  styleUrls: ['./produit.component.scss']\n})\nexport class ProduitComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'designation', 'description','prixUnitaire','descriptionProduit', 'zoneGeographiqueId','Valider'];\n  dataSource = new MatTableDataSource<any>();\n  private dbPath = 'produit-db';\n  produitList = []\n  produitRef: AngularFireList<Produit> = null;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Input() rowProperty: any;\n  produit = {} as Produit;\n  produitRef$ : AngularFireList<Produit>;\n\n  constructor(private produitService: ProduitService, public db: AngularFireDatabase) {\n this.produitService.getProduitList().valueChanges().subscribe(res => {\n      this.produitList.push(res);\n      this.dataSource.data = res;\n      console.log(this.dataSource.data);\n    });\n  }\n  ngOnInit() {\n    \n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n \n \n  ELEMENT_DATA: ProduitElement[] = this.produitList;\n}\n\nexport interface ProduitElement {\n    key: string;\n    code: string;\n    designation: string;\n    prixUnitaire: number;\n    descriptionProduit: string;\n    zoneGeographiqueId: number;\n    isValid:boolean;\n    Valider:string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BoutiqueComponent } from './boutique/boutique.component';\nimport { ListeValidationComponent } from './liste-validation/liste-validation.component';\nimport { MagasinComponent } from './magasin/magasin.component';\nimport { ProduitComponent } from './produit/produit.component';\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatInputModule } from '@angular/material/input';\nexport const routes = [\n  { path: '', component: ListeValidationComponent, pathMatch: 'full' },\n  { path: 'boutique-list', component: BoutiqueComponent, pathMatch: 'full' },\n  { path: 'produit-list', component: ProduitComponent, pathMatch: 'full' },\n  { path: 'magasin-list', component: MagasinComponent, pathMatch: 'full' },\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatBadgeModule,\n    MatInputModule,\n    FuseSharedModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [BoutiqueComponent, ListeValidationComponent, MagasinComponent, ProduitComponent]\n})\nexport class ValidationsModule { }\n"],"sourceRoot":""}