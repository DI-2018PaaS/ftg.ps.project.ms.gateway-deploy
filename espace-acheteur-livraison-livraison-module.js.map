{"version":3,"sources":["webpack:///./src/app/espace/acheteur/livraison/livraison-acheteur/livraison-acheteur.component.html","webpack:///./src/app/espace/acheteur/livraison/livraison-acheteur/livraison-acheteur.component.scss","webpack:///./src/app/espace/acheteur/livraison/livraison-acheteur/livraison-acheteur.component.ts","webpack:///./src/app/espace/acheteur/livraison/livraison.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,slBAAslB,WAAW,yPAAyP,iBAAiB,GAAG,oBAAoB,8OAA8O,kBAAkB,6OAA6O,aAAa,soCAAsoC,2BAA2B,yH;;;;;;;;;;;ACA7hF,yBAAyB,gBAAgB,EAAE,qBAAqB,oBAAoB,gBAAgB,EAAE,aAAa,eAAe,EAAE,gBAAgB,mBAAmB,qBAAqB,EAAE,eAAe,mBAAmB,qBAAqB,EAAE,aAAa,mBAAmB,qBAAqB,EAAE,YAAY,sBAAsB,EAAE,gBAAgB,gCAAgC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxU;AACkB;AACwB;AAC3C;AACQ;AACP;AAO5D;IAUA,oCAAoB,OAA2B,EACnC,cAAiC,EACpC,EAAuB,EAAU,OAA8B;QAFxE,iBAeE;QAfkB,YAAO,GAAP,OAAO,CAAoB;QACnC,mBAAc,GAAd,cAAc,CAAmB;QACpC,OAAE,GAAF,EAAE,CAAqB;QAAU,YAAO,GAAP,OAAO,CAAuB;QAXtE,qBAAgB,GAAa,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACpF,eAAU,GAAG,IAAI,oEAAkB,EAAO,CAAC;QAyC3C,iBAAY,GAAsB,EAAE,CAAC;QA7BnC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEnD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,aAAG,IAAI,UAAG;aACrC,YAAY,CAAC,cAAc,CAAC;aAC5B,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAFK,CAEL,CAAC;aAC9B,YAAY,EAAE;aACd,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACR,CAAC;IACA,6CAAQ,GAAR;QAEE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,gDAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAED,6CAAQ,GAAR,UAAS,GAAG;QACV,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,CAAC;IAC9D,CAAC;IArCwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;iEAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;4DAAC;IANvB,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAW2B,mHAAkB;YACnB,gFAAiB;YAChC,yEAAmB,EAAmB,yEAAqB;OAZ3D,0BAA0B,CA4CtC;IAAD,iCAAC;CAAA;AA5CsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZE;AACM;AACgD;AAChD;AACQ;AACmB;AACR;AACf;AAE5C,IAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2GAA0B,EAAE,SAAS,EAAE,MAAM,EAAE;CACvE,CAAC;AAaF;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAX3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,oEAAgB;gBAChB,+EAAY;gBACZ,+EAAkB;gBAClB,gEAAc;aACf;YACD,YAAY,EAAE,CAAC,2GAA0B,CAAC;SAC3C,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ","file":"espace-acheteur-livraison-livraison-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n    <div>\\n      <h2 class=\\\"title\\\">LIVRAISON</h2>\\n    </div>\\n  </div>\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"objet\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Objet </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.objet}} </td>\\n      </ng-container>\\n  \\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"nomAcheteur\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom acheteur </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.acheteurNom}} {{row.acheteurPrenom}}</td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date creation </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateCreation}} </td>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"Details\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Details </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Details}} \\n            <button mat-icon-button [routerLink]=\\\"['/anim-suivi','visu-livraison',row.key]\\\">\\n                <mat-icon>visibility</mat-icon>\\n              </button>\\n        </td>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"valider\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> valider </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\n              <div *ngIf=\\\"row.isValid === true\\\">\\n                  <a [routerLink]=\\\"['.']\\\">\\n                      <mat-icon style=\\\"color:green\\\">\\n                          done_outline\\n                      </mat-icon>\\n                    </a>\\n              </div> \\n              <div *ngIf=\\\"row.isValid === false\\\">\\n                  <a [routerLink]=\\\"['.']\\\" (click)=\\\"validate(row)\\\">\\n                      <mat-icon style=\\\"color:red\\\">\\n                          done_outline\\n                      </mat-icon>\\n                    </a>\\n              </div>   \\n          </td>\\n        </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #134ae4ba; }\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { CrudPopupComponent } from 'app/shared-front/shared/crudPopups/crudPopup/crudPopup.component';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-livraison-acheteur',\n  templateUrl: './livraison-acheteur.component.html',\n  styleUrls: ['./livraison-acheteur.component.scss']\n})\nexport class LivraisonAcheteurComponent implements OnInit {\n  displayedColumns: string[] = ['objet', 'nomAcheteur', 'date', 'Details', 'valider'];\n  dataSource = new MatTableDataSource<any>();\n \n  crudComp: CrudPopupComponent;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  blivraisonService : BlivraisonService;\n  utilisateur : any;\n\nconstructor(private parCrud: CrudPopupComponent, \n  private   blivraisonServ: BlivraisonService,\n  public db: AngularFireDatabase, private session: SessionStorageService)\n\t{\n    this.crudComp=this.parCrud;\n    this.blivraisonService = blivraisonServ; \n    this.utilisateur = this.session.get('utilisateur');\n\n    this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('acteurUserId')\n      .equalTo(this.utilisateur.key))\n      .valueChanges()\n      .subscribe(res => {\n        this.dataSource.data = res;\n      });\n\t}\n  ngOnInit() {\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  validate(row){\n    this.blivraisonServ.updateBlivraison(row.key,{isValid:true})\n  }\n  ELEMENT_DATA: CommandeElement[] = [];\n} \n\nexport interface CommandeElement {\n  NoLivraison: string;\n  Emetteur: string;\n  Date_Emission: string;\n  Reglement: string;\n  Details: string;\n  Modifier: string;\n  Supprimer: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LivraisonAcheteurComponent } from './livraison-acheteur/livraison-acheteur.component';\nimport { RouterModule } from '@angular/router';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material';\n\nexport const routes = [\n  { path: '', component: LivraisonAcheteurComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FuseSharedModule,\n    SharedModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  declarations: [LivraisonAcheteurComponent]\n})\nexport class LivraisonModule { }\n"],"sourceRoot":""}