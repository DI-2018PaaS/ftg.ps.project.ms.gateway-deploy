{"version":3,"sources":["webpack:///./src/app/main/apps/dashboards/analytics/analytics.component.html","webpack:///./src/app/main/apps/dashboards/analytics/analytics.component.scss","webpack:///./src/app/main/apps/dashboards/analytics/analytics.component.ts","webpack:///./src/app/main/apps/dashboards/analytics/analytics.module.ts","webpack:///./src/app/main/apps/dashboards/analytics/analytics.service.ts"],"names":[],"mappings":"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","file":"dashboards-analytics-analytics-module.js","sourcesContent":["module.exports = \"<div id=\\\"dashboard-analytics\\\" class=\\\"page-layout blank\\\">\\r\\n\\r\\n    <div class=\\\"main-widget\\\">\\r\\n\\r\\n        <div class=\\\"position-relative p-24 blue-600\\\"\\r\\n             fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                <span class=\\\"h2\\\">Visitors</span>\\r\\n                <span class=\\\"h5 secondary-text\\\">Unique visitors by month</span>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <div class=\\\"py-8 px-12 border-radius-2 line-height-1 mr-8 cursor-pointer\\\"\\r\\n                     (click)=\\\"widget1SelectedYear = '2015'\\\"\\r\\n                     [ngClass]=\\\"{'blue-700': widget1SelectedYear === '2015'}\\\">\\r\\n                    2015\\r\\n                </div>\\r\\n                <div class=\\\"py-8 px-12 border-radius-2 line-height-1 mr-8 cursor-pointer\\\"\\r\\n                     (click)=\\\"widget1SelectedYear = '2016'\\\"\\r\\n                     [ngClass]=\\\"{'blue-700': widget1SelectedYear === '2016'}\\\">\\r\\n                    2016\\r\\n                </div>\\r\\n                <div class=\\\"py-8 px-12 border-radius-2 line-height-1 cursor-pointer\\\"\\r\\n                     (click)=\\\"widget1SelectedYear = '2017'\\\"\\r\\n                     [ngClass]=\\\"{'blue-700': widget1SelectedYear === '2017'}\\\">\\r\\n                    2017\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"position-relative h-256 pb-16 blue-600\\\">\\r\\n            <canvas baseChart\\r\\n                    [datasets]=\\\"widgets.widget1.datasets[widget1SelectedYear]\\\"\\r\\n                    [labels]=\\\"widgets.widget1.labels\\\"\\r\\n                    [colors]=\\\"widgets.widget1.colors\\\"\\r\\n                    [options]=\\\"widgets.widget1.options\\\"\\r\\n                    [chartType]=\\\"widgets.widget1.chartType\\\">\\r\\n            </canvas>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"content\\\">\\r\\n\\r\\n        <div class=\\\"left mr-lg-32\\\">\\r\\n\\r\\n            <div class=\\\"pb-24 font-size-18 font-weight-300\\\">\\r\\n                How are your active users trending over time?\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\"\\r\\n                 fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"start start\\\">\\r\\n\\r\\n                <!-- Widget 2 -->\\r\\n                <div class=\\\"widget\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\">\\r\\n\\r\\n                    <div class=\\\"fuse-card auto-width mb-32\\\" [ngClass.gt-sm]=\\\"'mb-0 mr-32'\\\">\\r\\n\\r\\n                        <div class=\\\"p-16 pb-0\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n\\r\\n                            <div class=\\\"pr-16\\\">\\r\\n                                <div class=\\\"h3 secondary-text\\\">Conversion</div>\\r\\n                                <div class=\\\"font-size-54 font-weight-300 line-height-1 mt-8\\\">\\r\\n                                    {{widgets.widget2.conversion.value}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"py-4 font-size-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"green-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget2.conversion.ofTarget > 0\\\">\\r\\n                                    <mat-icon class=\\\"green-fg mr-4\\\">trending_up</mat-icon>\\r\\n                                    <span>{{widgets.widget2.conversion.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"red-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget2.conversion.ofTarget < 0\\\">\\r\\n                                    <mat-icon class=\\\"red-fg mr-4\\\">trending_down</mat-icon>\\r\\n                                    <span>{{widgets.widget2.conversion.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"ml-4 text-nowrap\\\">of target</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"h-96 w-100-p\\\">\\r\\n                            <canvas baseChart\\r\\n                                    [datasets]=\\\"widgets.widget2.datasets\\\"\\r\\n                                    [labels]=\\\"widgets.widget2.labels\\\"\\r\\n                                    [colors]=\\\"widgets.widget2.colors\\\"\\r\\n                                    [options]=\\\"widgets.widget2.options\\\"\\r\\n                                    [chartType]=\\\"widgets.widget2.chartType\\\">\\r\\n                            </canvas>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- / Widget 2 -->\\r\\n\\r\\n                <!-- Widget 3 -->\\r\\n                <div class=\\\"widget\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"34\\\">\\r\\n\\r\\n                    <div class=\\\"fuse-card auto-width mb-32\\\" [ngClass.gt-sm]=\\\"'mb-0 mr-32'\\\">\\r\\n\\r\\n                        <div class=\\\"p-16 pb-0\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n\\r\\n                            <div class=\\\"pr-16\\\">\\r\\n                                <div class=\\\"h3 secondary-text\\\">Impressions</div>\\r\\n                                <div class=\\\"font-size-54 font-weight-300 line-height-1 mt-8\\\">\\r\\n                                    {{widgets.widget3.impressions.value}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"py-4 font-size-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"green-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget3.impressions.ofTarget > 0\\\">\\r\\n                                    <mat-icon class=\\\"green-fg mr-4\\\">trending_up</mat-icon>\\r\\n                                    <span>{{widgets.widget3.impressions.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"red-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget3.impressions.ofTarget < 0\\\">\\r\\n                                    <mat-icon class=\\\"red-fg mr-4\\\">trending_down</mat-icon>\\r\\n                                    <span>{{widgets.widget3.impressions.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"ml-4 text-nowrap\\\">of target</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"h-96 w-100-p\\\">\\r\\n                            <canvas baseChart\\r\\n                                    [datasets]=\\\"widgets.widget3.datasets\\\"\\r\\n                                    [labels]=\\\"widgets.widget3.labels\\\"\\r\\n                                    [colors]=\\\"widgets.widget3.colors\\\"\\r\\n                                    [options]=\\\"widgets.widget3.options\\\"\\r\\n                                    [chartType]=\\\"widgets.widget3.chartType\\\">\\r\\n                            </canvas>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- / Widget 3 -->\\r\\n\\r\\n                <!-- Widget 4 -->\\r\\n                <div class=\\\"widget\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\">\\r\\n\\r\\n                    <div class=\\\"fuse-card auto-width\\\">\\r\\n\\r\\n                        <div class=\\\"p-16 pb-0\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start end\\\">\\r\\n\\r\\n                            <div class=\\\"pr-16\\\">\\r\\n                                <div class=\\\"h3 secondary-text\\\">Visits</div>\\r\\n                                <div class=\\\"font-size-54 font-weight-300 line-height-1 mt-8\\\">\\r\\n                                    {{widgets.widget4.visits.value}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"py-4 font-size-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"green-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget4.visits.ofTarget > 0\\\">\\r\\n                                    <mat-icon class=\\\"green-fg mr-4\\\">trending_up</mat-icon>\\r\\n                                    <span>{{widgets.widget4.visits.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"red-fg\\\"\\r\\n                                     *ngIf=\\\"widgets.widget4.visits.ofTarget < 0\\\">\\r\\n                                    <mat-icon class=\\\"red-fg mr-4\\\">trending_down</mat-icon>\\r\\n                                    <span>{{widgets.widget4.visits.ofTarget}}%</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"ml-4 text-nowrap\\\">of target</div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"h-96 w-100-p\\\">\\r\\n                            <canvas baseChart\\r\\n                                    [datasets]=\\\"widgets.widget4.datasets\\\"\\r\\n                                    [labels]=\\\"widgets.widget4.labels\\\"\\r\\n                                    [colors]=\\\"widgets.widget4.colors\\\"\\r\\n                                    [options]=\\\"widgets.widget4.options\\\"\\r\\n                                    [chartType]=\\\"widgets.widget4.chartType\\\">\\r\\n                            </canvas>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- / Widget 4 -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <!-- Widget 5 -->\\r\\n            <div class=\\\"pt-48 pb-24 font-size-18 font-weight-300\\\">\\r\\n                How many pages your users visit?\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"fuse-card auto-width\\\">\\r\\n\\r\\n                <div class=\\\"position-relative p-24\\\"\\r\\n                     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n                        <span class=\\\"h2\\\">Visitors & Page views</span>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <div class=\\\"py-8 px-12 border-radius-2 line-height-1 mr-8 cursor-pointer\\\"\\r\\n                             (click)=\\\"widget5SelectedDay = 'yesterday'\\\"\\r\\n                             [ngClass]=\\\"{'accent': widget5SelectedDay === 'yesterday'}\\\">\\r\\n                            Yesterday\\r\\n                        </div>\\r\\n                        <div class=\\\"py-8 px-12 border-radius-2 line-height-1 mr-8 cursor-pointer\\\"\\r\\n                             (click)=\\\"widget5SelectedDay = 'today'\\\"\\r\\n                             [ngClass]=\\\"{'accent': widget5SelectedDay === 'today'}\\\">\\r\\n                            Today\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"position-relative h-368 pb-16\\\">\\r\\n                    <canvas baseChart\\r\\n                            [datasets]=\\\"widgets.widget5.datasets[widget5SelectedDay]\\\"\\r\\n                            [labels]=\\\"widgets.widget5.labels\\\"\\r\\n                            [colors]=\\\"widgets.widget5.colors\\\"\\r\\n                            [options]=\\\"widgets.widget5.options\\\"\\r\\n                            [chartType]=\\\"widgets.widget5.chartType\\\">\\r\\n                    </canvas>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <!-- / Widget 5 -->\\r\\n\\r\\n            <!-- Widget 6 -->\\r\\n            <div class=\\\"pt-48 pb-24 font-size-18 font-weight-300\\\">\\r\\n                Where are your users?\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"fuse-card auto-width p-16\\\">\\r\\n\\r\\n                <agm-map class=\\\"h-640 w-100-p\\\"\\r\\n                         [minZoom]=\\\"2\\\"\\r\\n                         [maxZoom]=\\\"2\\\"\\r\\n                         [fullscreenControl]=\\\"false\\\"\\r\\n                         [rotateControl]=\\\"false\\\"\\r\\n                         [zoomControl]=\\\"false\\\"\\r\\n                         [scaleControl]=\\\"false\\\"\\r\\n                         [streetViewControl]=\\\"false\\\"\\r\\n                         [scrollwheel]=\\\"false\\\"\\r\\n                         [styles]=\\\"widgets.widget6.styles\\\">\\r\\n                    <agm-marker\\r\\n                        *ngFor=\\\"let marker of widgets.widget6.markers\\\"\\r\\n                        [latitude]=\\\"marker.lat\\\"\\r\\n                        [longitude]=\\\"marker.lng\\\">\\r\\n\\r\\n                        <agm-info-window>\\r\\n                            <strong>{{marker.label}}</strong>\\r\\n                        </agm-info-window>\\r\\n\\r\\n                    </agm-marker>\\r\\n                </agm-map>\\r\\n\\r\\n            </div>\\r\\n            <!-- / Widget 6 -->\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"right\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row wrap\\\" fxLayout.gt-md=\\\"column\\\">\\r\\n\\r\\n                <!-- Widget 7 -->\\r\\n                <div class=\\\"mb-48\\\" [ngClass.lt-lg]=\\\"'mr-32'\\\" [ngClass.xs]=\\\"'mr-0'\\\">\\r\\n\\r\\n                    <div class=\\\"pb-24 font-size-18 font-weight-300\\\">\\r\\n                        What are your top devices?\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"fuse-card\\\">\\r\\n\\r\\n                        <div class=\\\"p-16\\\">\\r\\n                            <div class=\\\"h1 font-weight-300\\\">Sessions by device</div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"h-200\\\">\\r\\n                            <ngx-charts-pie-chart\\r\\n                                *fuseIfOnDom\\r\\n                                [scheme]=\\\"widgets.widget7.scheme\\\"\\r\\n                                [results]=\\\"widgets.widget7.devices\\\"\\r\\n                                [doughnut]=\\\"true\\\">\\r\\n                            </ngx-charts-pie-chart>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n                            <div class=\\\"px-16\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n                                 *ngFor=\\\"let device of widgets.widget7.devices\\\">\\r\\n\\r\\n                                <div class=\\\"h4 secondary-text\\\">{{device.name}}</div>\\r\\n                                <div class=\\\"h2 font-weight-300 py-8\\\">{{device.value}}%</div>\\r\\n\\r\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <mat-icon class=\\\"s-18 pr-4 red-fg\\\"\\r\\n                                              *ngIf=\\\"device.change < 0\\\">\\r\\n                                        arrow_downward\\r\\n                                    </mat-icon>\\r\\n\\r\\n                                    <mat-icon class=\\\"s-18 pr-4 green-fg\\\"\\r\\n                                              *ngIf=\\\"device.change > 0\\\">\\r\\n                                        arrow_upward\\r\\n                                    </mat-icon>\\r\\n\\r\\n                                    <div class=\\\"h5 red-fg\\\"\\r\\n                                         [ngClass]=\\\"{'red-fg': device.change < 0, 'green-fg': device.change > 0}\\\">\\r\\n                                        {{device.change}}%\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"card-divider mb-0\\\"></div>\\r\\n\\r\\n                        <div class=\\\"px-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            <mat-form-field>\\r\\n                                <mat-select class=\\\"simplified\\\" value=\\\"7days\\\">\\r\\n                                    <mat-option value=\\\"today\\\">Today</mat-option>\\r\\n                                    <mat-option value=\\\"yesterday\\\">Yesterday</mat-option>\\r\\n                                    <mat-option value=\\\"7days\\\">Last 7 days</mat-option>\\r\\n                                    <mat-option value=\\\"28days\\\">Last 28 days</mat-option>\\r\\n                                    <mat-option value=\\\"90days\\\">Last 90 days</mat-option>\\r\\n                                </mat-select>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <button mat-button color=\\\"accent\\\">OVERVIEW</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- / Widget 7 -->\\r\\n\\r\\n                <!-- Widget 8 -->\\r\\n                <div class=\\\"mb-48\\\" [ngClass.lt-lg]=\\\"'mr-32'\\\" [ngClass.xs]=\\\"'mr-0'\\\">\\r\\n\\r\\n                    <div class=\\\"pb-24 font-size-18 font-weight-300\\\">\\r\\n                        How are your sales?\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"fuse-card\\\">\\r\\n\\r\\n                        <div class=\\\"light-blue-600\\\">\\r\\n\\r\\n                            <div class=\\\"p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                <div class=\\\"pr-16\\\">\\r\\n                                    <div class=\\\"h1 font-weight-300\\\">Sales</div>\\r\\n                                    <div class=\\\"h5 secondary-text\\\">Lifetime sum of your sales</div>\\r\\n                                </div>\\r\\n\\r\\n                                <div>\\r\\n                                    <button mat-icon-button [matMenuTriggerFor]=\\\"card19Menu\\\" aria-label=\\\"more\\\">\\r\\n                                        <mat-icon>more_vert</mat-icon>\\r\\n                                    </button>\\r\\n\\r\\n                                    <mat-menu #card19Menu=\\\"matMenu\\\">\\r\\n                                        <button mat-menu-item>\\r\\n                                            <mat-icon>trending_up</mat-icon>\\r\\n                                            <span>Trend</span>\\r\\n                                        </button>\\r\\n                                        <button mat-menu-item>\\r\\n                                            <mat-icon>history</mat-icon>\\r\\n                                            <span>History</span>\\r\\n                                        </button>\\r\\n                                        <button mat-menu-item>\\r\\n                                            <mat-icon>notifications_off</mat-icon>\\r\\n                                            <span>Disable alerts</span>\\r\\n                                        </button>\\r\\n                                    </mat-menu>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"p-16 pt-8\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between end\\\">\\r\\n                                <div class=\\\"font-size-48 font-weight-300 line-height-1\\\">{{widgets.widget8.today}}</div>\\r\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                                    <mat-icon *ngIf=\\\"widgets.widget8.change.value > 0\\\">trending_up</mat-icon>\\r\\n                                    <mat-icon *ngIf=\\\"widgets.widget8.change.value < 0\\\">trending_down</mat-icon>\\r\\n                                    <div class=\\\"ml-8\\\">{{widgets.widget8.change.value}}\\r\\n                                        ({{widgets.widget8.change.percentage}}%)\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <mat-tab-group backgroundColor=\\\"accent\\\">\\r\\n                            <mat-tab label=\\\"1DAY\\\">\\r\\n                                <div class=\\\"h-200 my-16\\\">\\r\\n                                    <ngx-charts-line-chart\\r\\n                                        *fuseIfOnDom\\r\\n                                        [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n                                        [results]=\\\"widgets.widget8.data\\\"\\r\\n                                        [xAxis]=\\\"false\\\"\\r\\n                                        [yAxis]=\\\"true\\\"\\r\\n                                        [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n                                        [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n                                    </ngx-charts-line-chart>\\r\\n                                </div>\\r\\n                            </mat-tab>\\r\\n\\r\\n                            <mat-tab label=\\\"1WEEK\\\">\\r\\n                                <div class=\\\"h-200 my-16\\\">\\r\\n                                    <ngx-charts-line-chart\\r\\n                                        *fuseIfOnDom\\r\\n                                        [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n                                        [results]=\\\"widgets.widget8.data\\\"\\r\\n                                        [xAxis]=\\\"false\\\"\\r\\n                                        [yAxis]=\\\"true\\\"\\r\\n                                        [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n                                        [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n                                    </ngx-charts-line-chart>\\r\\n                                </div>\\r\\n                            </mat-tab>\\r\\n\\r\\n                            <mat-tab label=\\\"1MONTH\\\">\\r\\n                                <div class=\\\"h-200 my-16\\\">\\r\\n                                    <ngx-charts-line-chart\\r\\n                                        *fuseIfOnDom\\r\\n                                        [scheme]=\\\"widgets.widget8.scheme\\\"\\r\\n                                        [results]=\\\"widgets.widget8.data\\\"\\r\\n                                        [xAxis]=\\\"false\\\"\\r\\n                                        [yAxis]=\\\"true\\\"\\r\\n                                        [yScaleMin]=\\\"widgets.widget8.dataMin\\\"\\r\\n                                        [yScaleMax]=\\\"widgets.widget8.dataMax\\\">\\r\\n                                    </ngx-charts-line-chart>\\r\\n                                </div>\\r\\n                            </mat-tab>\\r\\n                        </mat-tab-group>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <!-- / Widget 8 -->\\r\\n\\r\\n                <!-- Widget 9 -->\\r\\n                <div class=\\\"mb-48\\\" [ngClass.lt-lg]=\\\"'mr-32'\\\" [ngClass.xs]=\\\"'mr-0'\\\">\\r\\n\\r\\n                    <div class=\\\"pb-24 font-size-18 font-weight-300\\\" [ngClass.lt-lg]=\\\"'pt-0'\\\">\\r\\n                        What are your top campaigns?\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"fuse-card\\\">\\r\\n\\r\\n                        <div class=\\\"p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            <div class=\\\"h1 pr-16\\\">Top campaigns</div>\\r\\n\\r\\n                            <div>\\r\\n                                <button mat-icon-button [matMenuTriggerFor]=\\\"card20Menu\\\" aria-label=\\\"more\\\">\\r\\n                                    <mat-icon>more_vert</mat-icon>\\r\\n                                </button>\\r\\n\\r\\n                                <mat-menu #card20Menu=\\\"matMenu\\\">\\r\\n                                    <button fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-menu-item>\\r\\n                                        <mat-icon color=\\\"accent\\\">check_box</mat-icon>\\r\\n                                        <span>Show Clicks</span>\\r\\n                                    </button>\\r\\n                                    <button fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-menu-item>\\r\\n                                        <mat-icon color=\\\"accent\\\">check_box</mat-icon>\\r\\n                                        <span>Show Conversion</span>\\r\\n                                    </button>\\r\\n                                    <button fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" mat-menu-item>\\r\\n                                        <mat-icon>check_box_outline_blank</mat-icon>\\r\\n                                        <span>Show CPC</span>\\r\\n                                    </button>\\r\\n                                </mat-menu>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <table class=\\\"simple clickable\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th></th>\\r\\n                                    <th class=\\\"text-right\\\">Clicks</th>\\r\\n                                    <th class=\\\"text-right\\\">Conv</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let row of widgets.widget9.rows\\\">\\r\\n                                    <td>{{row.title}}</td>\\r\\n                                    <td class=\\\"text-right\\\">{{row.clicks}}</td>\\r\\n                                    <td class=\\\"text-right\\\">{{row.conversion}}</td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n                        <div class=\\\"card-divider full-width\\\"></div>\\r\\n\\r\\n                        <div class=\\\"p-8 pt-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                            <button mat-button color=\\\"accent\\\">GO TO CAMPAIGNS</button>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!-- / widget 9 -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\\n *    `white-on-black` or `black-on-white`.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#dashboard-analytics .main-widget {\\n  display: flex;\\n  flex-direction: column; }\\n#dashboard-analytics .content {\\n  display: flex;\\n  flex: 1 1 auto;\\n  padding: 32px;\\n  min-width: 0; }\\n@media (max-width: 1279px) {\\n    #dashboard-analytics .content {\\n      flex-direction: column; } }\\n#dashboard-analytics .content .left {\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1 1 auto;\\n    min-width: 0; }\\n#dashboard-analytics .content .left .widget {\\n      flex: 1 1 auto;\\n      min-width: 0; }\\n#dashboard-analytics .content .right {\\n    display: flex;\\n    flex: 0 0 auto;\\n    width: 320px;\\n    min-width: 320px;\\n    max-width: 320px; }\\n@media (max-width: 1279px) {\\n      #dashboard-analytics .content .right {\\n        flex: 1 0 100%;\\n        margin-top: 32px;\\n        width: 100%;\\n        min-width: 0;\\n        max-width: none; } }\\n@media (max-width: 1279px) {\\n      #dashboard-analytics .content .right .fuse-card {\\n        width: 100%;\\n        min-width: 0;\\n        max-width: none; } }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\nimport { AnalyticsDashboardService } from 'app/main/apps/dashboards/analytics/analytics.service';\r\n\r\n@Component({\r\n    selector     : 'analytics-dashboard',\r\n    templateUrl  : './analytics.component.html',\r\n    styleUrls    : ['./analytics.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class AnalyticsDashboardComponent implements OnInit\r\n{\r\n    widgets: any;\r\n    widget1SelectedYear = '2016';\r\n    widget5SelectedDay = 'today';\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {AnalyticsDashboardService} _analyticsDashboardService\r\n     */\r\n    constructor(\r\n        private _analyticsDashboardService: AnalyticsDashboardService\r\n    )\r\n    {\r\n        // Register the custom chart.js plugin\r\n        this._registerCustomChartJSPlugin();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Get the widgets from the service\r\n        this.widgets = this._analyticsDashboardService.widgets;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Register a custom plugin\r\n     */\r\n    private _registerCustomChartJSPlugin(): void\r\n    {\r\n        (<any>window).Chart.plugins.register({\r\n            afterDatasetsDraw: function (chart, easing): any {\r\n                // Only activate the plugin if it's made available\r\n                // in the options\r\n                if (\r\n                    !chart.options.plugins.xLabelsOnTop ||\r\n                    (chart.options.plugins.xLabelsOnTop && chart.options.plugins.xLabelsOnTop.active === false)\r\n                )\r\n                {\r\n                    return;\r\n                }\r\n\r\n                // To only draw at the end of animation, check for easing === 1\r\n                const ctx = chart.ctx;\r\n\r\n                chart.data.datasets.forEach(function (dataset, i): any {\r\n                    const meta = chart.getDatasetMeta(i);\r\n                    if ( !meta.hidden )\r\n                    {\r\n                        meta.data.forEach(function (element, index): any {\r\n\r\n                            // Draw the text in black, with the specified font\r\n                            ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\r\n                            const fontSize = 13;\r\n                            const fontStyle = 'normal';\r\n                            const fontFamily = 'Roboto, Helvetica Neue, Arial';\r\n                            ctx.font = (<any>window).Chart.helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                            // Just naively convert to string for now\r\n                            const dataString = dataset.data[index].toString() + 'k';\r\n\r\n                            // Make sure alignment settings are correct\r\n                            ctx.textAlign = 'center';\r\n                            ctx.textBaseline = 'middle';\r\n                            const padding = 15;\r\n                            const startY = 24;\r\n                            const position = element.tooltipPosition();\r\n                            ctx.fillText(dataString, position.x, startY);\r\n\r\n                            ctx.save();\r\n\r\n                            ctx.beginPath();\r\n                            ctx.setLineDash([5, 3]);\r\n                            ctx.moveTo(position.x, startY + padding);\r\n                            ctx.lineTo(position.x, position.y - padding);\r\n                            ctx.strokeStyle = 'rgba(255,255,255,0.12)';\r\n                            ctx.stroke();\r\n\r\n                            ctx.restore();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MatButtonModule, MatFormFieldModule, MatIconModule, MatMenuModule, MatSelectModule, MatTabsModule } from '@angular/material';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { FuseWidgetModule } from '@fuse/components/widget/widget.module';\r\n\r\nimport { AnalyticsDashboardComponent } from 'app/main/apps/dashboards/analytics/analytics.component';\r\nimport { AnalyticsDashboardService } from 'app/main/apps/dashboards/analytics/analytics.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '**',\r\n        component: AnalyticsDashboardComponent,\r\n        resolve  : {\r\n            data: AnalyticsDashboardService\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AnalyticsDashboardComponent\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatSelectModule,\r\n        MatTabsModule,\r\n\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyD81ecsCj4yYpcXSLFcYU97PvRsE_X8Bx8'\r\n        }),\r\n        ChartsModule,\r\n        NgxChartsModule,\r\n\r\n        FuseSharedModule,\r\n        FuseWidgetModule\r\n    ],\r\n    providers   : [\r\n        AnalyticsDashboardService\r\n    ]\r\n})\r\nexport class AnalyticsDashboardModule\r\n{\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AnalyticsDashboardService implements Resolve<any>\r\n{\r\n    widgets: any[];\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} _httpClient\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Resolver\r\n     *\r\n     * @param {ActivatedRouteSnapshot} route\r\n     * @param {RouterStateSnapshot} state\r\n     * @returns {Observable<any> | Promise<any> | any}\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Promise.all([\r\n                this.getWidgets()\r\n            ]).then(\r\n                () => {\r\n                    resolve();\r\n                },\r\n                reject\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get widgets\r\n     *\r\n     * @returns {Promise<any>}\r\n     */\r\n    getWidgets(): Promise<any>\r\n    {\r\n        return new Promise((resolve, reject) => {\r\n            this._httpClient.get('api/analytics-dashboard-widgets')\r\n                .subscribe((response: any) => {\r\n                    this.widgets = response;\r\n                    resolve(response);\r\n                }, reject);\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}