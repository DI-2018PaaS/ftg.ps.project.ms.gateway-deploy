{"version":3,"sources":["webpack:///./src/app/espace/fournisseur/four-livraisons/fournisseur-livraisons.module.ts","webpack:///./src/app/espace/fournisseur/four-livraisons/livraison-list/fourn-livraison-list.component.html","webpack:///./src/app/espace/fournisseur/four-livraisons/livraison-list/fourn-livraison-list.component.scss","webpack:///./src/app/espace/fournisseur/four-livraisons/livraison-list/fourn-livraison-list.component.ts","webpack:///./src/app/espace/fournisseur/four-livraisons/visu-blivraison/visu-blivraison.component.html","webpack:///./src/app/espace/fournisseur/four-livraisons/visu-blivraison/visu-blivraison.component.scss","webpack:///./src/app/espace/fournisseur/four-livraisons/visu-blivraison/visu-blivraison.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACQ;AACmB;AACjB;AACA;AACV;AAC4C;AACL;AAG/E,IAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uGAAwB,EAAE,SAAS,EAAE,MAAM,EAAE;IACpE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,kGAAuB,EAAE,SAAS,EAAE,MAAM,EAAE;CACvF,CAAC;AAaF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAXvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,oEAAgB;gBAChB,+EAAY;gBACZ,sEAAc;gBACd,sEAAc;gBACd,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uGAAwB,EAAE,kGAAuB,CAAC;SAClE,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;AC3BxC,slBAAslB,WAAW,yPAAyP,iBAAiB,GAAG,oBAAoB,8OAA8O,kBAAkB,6OAA6O,aAAa,grCAAgrC,2BAA2B,yH;;;;;;;;;;;ACAvkF,yBAAyB,gBAAgB,EAAE,qBAAqB,oBAAoB,gBAAgB,EAAE,aAAa,eAAe,EAAE,gBAAgB,mBAAmB,qBAAqB,EAAE,eAAe,mBAAmB,qBAAqB,EAAE,aAAa,mBAAmB,qBAAqB,EAAE,YAAY,sBAAsB,EAAE,gBAAgB,gCAAgC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvU;AACyC;AACxB;AACnB;AACQ;AACP;AAS5D;IASE,kCAAoB,OAA2B,EACrC,cAAiC,EACpC,EAAuB,EAAS,OAA8B;QAFrE,iBAqCA;QArCoB,YAAO,GAAP,OAAO,CAAoB;QACrC,mBAAc,GAAd,cAAc,CAAmB;QACpC,OAAE,GAAF,EAAE,CAAqB;QAAS,YAAO,GAAP,OAAO,CAAuB;QAVrE,qBAAgB,GAAa,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACpF,eAAU,GAAG,IAAI,oEAAkB,EAAO,CAAC;QAM3C,gBAAW,GAAG,EAAiB,CAAC;QAuDhC,iBAAY,GAAsB,EAAE,CAAC;QAlDnC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEnD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,aAAG,IAAI,UAAG;aACrC,YAAY,CAAC,eAAe,CAAC;aAC7B,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAFI,CAEJ,CAAC;aAC/B,YAAY,EAAE;aACd,SAAS,CAAC,aAAG;YACZ,GAAG,CAAC,OAAO,CAAC,kBAAQ;gBAClB,EAAE,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAG,IAAI,CAAC,EAAC;oBACvC,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBAChC,IAAI,GAAG,GAAG,CAAC;oBACX,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC;QAEJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,aAAG,IAAI,UAAG;aACvC,YAAY,CAAC,SAAS,CAAC;aACvB,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAFM,CAEN,CAAC;aAC/B,YAAY,EAAE;aACd,SAAS,CAAC,cAAI;YACb,IAAI,CAAC,OAAO,CAAC,kBAAQ;gBACnB,EAAE,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAG,IAAI,CAAC,EAAC;oBACzC,IAAI,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IAER,CAAC;IACA,2CAAQ,GAAR;QAEE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,8CAAW,GAAX,UAAY,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IACD,2CAAQ,GAAR,UAAS,GAAG;QACV,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,GAAG,EAAC,EAAC,oBAAoB,EAAC,IAAI,EAAC,CAAC;IACvE,CAAC;IAzDwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;+DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;0DAAC;IANvB,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAW6B,mHAAkB;YACrB,gFAAiB;YAChC,yEAAmB,EAAkB,yEAAqB;OAX1D,wBAAwB,CAgEpC;IAAD,+BAAC;CAAA;AAhEoC;;;;;;;;;;;;ACdrC,oLAAoL,oBAAoB,GAAG,iBAAiB,iCAAiC,KAAK,qBAAqB,yCAAyC,uBAAuB,iCAAiC,iBAAiB,8MAA8M,oBAAoB,q4CAAq4C,cAAc,oTAAoT,qBAAqB,2TAA2T,4BAA4B,wSAAwS,sBAAsB,sSAAsS,4BAA4B,oMAAoM,2BAA2B,2PAA2P,cAAc,8WAA8W,4BAA4B,sEAAsE,sGAAsG,gBAAgB,GAAG,aAAa,MAAM,mBAAmB,oG;;;;;;;;;;;ACAr3I,yBAAyB,gBAAgB,EAAE,YAAY,eAAe,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1C;AACS;AACQ;AACP;AAEH;AAGF;AACC;AAgBxD;IAeE,iCAAoB,cAAiC,EAC5C,EAAuB,EAAS,OAA8B,EAAU,MAAe,EAAU,cAA+B;QADzI,iBA2DG;QA3DiB,mBAAc,GAAd,cAAc,CAAmB;QAC5C,OAAE,GAAF,EAAE,CAAqB;QAAS,YAAO,GAAP,OAAO,CAAuB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAU,mBAAc,GAAd,cAAc,CAAiB;QAfzI,qBAAgB,GAAa,CAAC,MAAM,EAAE,aAAa,EAAE,oBAAoB,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;QACvG,eAAU,GAAG,IAAI,oEAAkB,EAAO,CAAC;QAC3C,cAAS,GAAG,IAAI,uEAAc,CAAkB,IAAI,EAAE,EAAE,CAAC,CAAC;QAC1D,iBAAY,GAAG,EAAkB,CAAC;QAClC,gBAAW,GAAG,EAAiB,CAAC;QAChC,mBAAc,GAAI,EAAE,CAAC;QACrB,gBAAW,GAAG,EAAE,CAAC;QAIjB,iBAAY,GAAY,CAAC,CAAC;QAClB,gBAAW,GAAG,kBAAkB;QAChC,wBAAmB,GAAG,aAAa;QAKvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE9C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,YAAE,IAAG,SAAE;aACnC,YAAY,CAAC,QAAQ,CAAC;aACtB,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAFI,CAEJ,CAAC;aAC9B,YAAY,EAAE;aACd,SAAS,CAAC,YAAE;YACX,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC;QAEF,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,aAAG,IAAI,UAAG;aACvC,YAAY,CAAC,KAAK,CAAC;aACnB,OAAO,CAAC,GAAG,CAAC,EAFwB,CAExB,CAAC;aACb,YAAY,EAAE;aACd,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,YAAY,GAAI,GAAG,CAAC,CAAC,CAAiB,CAAC;YAE9C,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,YAAE,IAAI,SAAE;iBACtC,YAAY,CAAC,KAAK,CAAC;iBACnB,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAFE,CAEF,CAAC;iBACnC,YAAY,EAAE;iBACd,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAgB,CAAC;YACvC,CAAC,CAAC;YAEF,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,aAAG,IAAI,UAAG;iBACxC,YAAY,CAAC,KAAK,CAAC;iBACnB,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAFH,CAEG,CAAC;iBACzC,YAAY,EAAE;iBACd,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAgB,CAAC;gBAEzC,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,aAAG,IAAI,UAAG;qBACtC,YAAY,CAAC,YAAY,CAAC;qBAC1B,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAFD,CAEC,CAAC;qBACrC,YAAY,EAAE;qBACd,SAAS,CAAC,gBAAM;oBACf,KAAI,CAAC,cAAc,GAAG,MAAM,CAAE;oBAC9B,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAC;wBAC3B,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,EAAE,eAAK,IAAI,YAAK;6BAClD,YAAY,CAAC,KAAK,CAAC;6BACnB,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAF2B,CAE3B,CAAC;6BACnB,YAAY,EAAE;6BACd,SAAS,CAAC,cAAI;4BACb,IAAM,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC;4BAClC,IAAI,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;4BAC3C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;4BAChG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;wBAC9B,CAAC,CAAC;oBACN,CAAC,CAAC;gBACJ,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IACL,gFAAgF;IAChF,+CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,MAAM,CAAC,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,8CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACtE,CAAC;IACC,0CAAQ,GAAR;IACA,CAAC;IAzFU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAgBoC,gFAAiB;YACxC,yEAAmB,EAAkB,yEAAqB,EAAmB,sDAAM,EAA2B,8DAAc;OAhB9H,uBAAuB,CA2FnC;IAAD,8BAAC;CAAA;AA3FmC","file":"espace-fournisseur-four-livraisons-fournisseur-livraisons-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { SharedModule } from '../../../shared-front/shared/shared.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatInputModule } from '@angular/material/input';\nimport { RouterModule } from '@angular/router';\nimport { FoLivraisonListComponent } from './livraison-list/fourn-livraison-list.component';\nimport { VisuBlivraisonComponent } from './visu-blivraison/visu-blivraison.component';\n\n\nexport const routes = [\n  { path: '', component: FoLivraisonListComponent, pathMatch: 'full' },\n  { path: 'visu-blivraison/:id', component: VisuBlivraisonComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FuseSharedModule,\n    SharedModule,\n    MatBadgeModule,\n    MatInputModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [FoLivraisonListComponent, VisuBlivraisonComponent]\n})\nexport class LivraisonsFournisseurModule { }\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"title-top\\\">\\n    <div>\\n      <h2 class=\\\"title\\\">LIVRAISON</h2>\\n    </div>\\n  </div>\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"objet\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Objet </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.objet}} </td>\\n      </ng-container>\\n  \\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"nomAcheteur\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom acheteur </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.acheteurNom}} {{row.acheteurPrenom}}</td>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date creation </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.dateCreation}} </td>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"Details\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Details </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.Details}} \\n            <button mat-icon-button [routerLink]=\\\"['/anim-suivi','visu-blivraison',row.key]\\\">\\n                <mat-icon style=\\\"color:red !important\\\"> visibility</mat-icon>\\n            </button>\\n        </td>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"valider\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> valider </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n            <div *ngIf=\\\"row.isApprovedByAnim === false\\\">\\n                <button mat-icon-button (click)=\\\"validate(row.key)\\\">\\n                  <mat-icon>done_all</mat-icon>\\n                </button>\\n            </div>\\n            <div *ngIf=\\\"row.isApprovedByAnim == true\\\">\\n                <button mat-icon-button>\\n                  <mat-icon style=\\\"color:greenyellow !important\\\">done_all</mat-icon>\\n                </button>\\n            </div>\\n          <!-- <button mat-icon-button (click)=\\\"validate(row.key)\\\">\\n            <mat-icon>done_all</mat-icon>\\n          </button> -->\\n        </td>\\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n.orange600 {\\n  color: #FB8C00;\\n  padding-top: 7px; }\\n\\n.green600 {\\n  color: #3ea80c;\\n  padding-top: 7px; }\\n\\n.red600 {\\n  color: #fb0000;\\n  padding-top: 7px; }\\n\\n.title {\\n  font-weight: bold; }\\n\\n.title-top {\\n  background-color: #134ae4ba; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CrudPopupComponent } from 'app/shared-front/shared/crudPopups/crudPopup/crudPopup.component';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Utilisateur } from 'app/models/user/utilisateur/utilisateur.model';\n\n@Component({\n  selector: 'app-folivraison-list',\n  templateUrl: './fourn-livraison-list.component.html',\n  styleUrls: ['./fourn-livraison-list.component.scss']\n})\n\nexport class FoLivraisonListComponent implements OnInit {\n  displayedColumns: string[] = ['objet', 'nomAcheteur', 'date', 'Details', 'valider'];\n  dataSource = new MatTableDataSource<any>();\n \n  crudComp: CrudPopupComponent;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  blivraisonService : BlivraisonService;\n  utilisateur = {} as Utilisateur;\n  constructor(private parCrud: CrudPopupComponent,\n  private   blivraisonServ: BlivraisonService,\n  public db: AngularFireDatabase,private session: SessionStorageService)\n\t{\n    this.crudComp=this.parCrud;\n    this.blivraisonService = blivraisonServ; \n    this.utilisateur = this.session.get('utilisateur');\n\n    this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('fournisseurId')\n      .equalTo(this.utilisateur.fkey))\n      .valueChanges()\n      .subscribe(res => {\n        res.forEach(response =>{\n          if (response['isApprovedByAnim'] ==true){\n            var data = this.dataSource.data;\n            data = res;\n            this.dataSource.data = data;\n          }\n        })\n        \n      });\n\n      this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('livreur')\n      .equalTo(this.utilisateur.fkey))\n      .valueChanges()\n      .subscribe(rest => {\n        rest.forEach(response =>{\n          if (response['isApprovedByAnim'] ==true){\n          var datas = this.dataSource.data;\n          datas.push(rest);\n          this.dataSource.data=datas[0];\n          }\n        })\n      });\n      \n\t}\n  ngOnInit(){\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  validate(key){\n    this.blivraisonServ.updateBlivraison(key,{isApprovedByFourniss:true})\n  }\n  ELEMENT_DATA: CommandeElement[] = [];\n}\n\n\nexport interface CommandeElement {\nNoLivraison: string;\nEmetteur: string;\nDate_Emission: string;\nReglement: string;\nDetails: string;\nModifier: string;\nSupprimer: string;\n}\n\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"30px\\\">\\n    <div fxFlex=\\\"70\\\">\\n      <div fxLayout=\\\"column\\\">\\n          <div>\\n            <fieldset>\\n                {{fournisseur.prenom}} {{fournisseur.nom}} - <span style=\\\"font-size: 19px;\\\">{{agreement.juridique}}</span><br>\\n                Tel/Fax : {{fournisseur.telephone}} <br>\\n                NINEA : {{agreement.ninea}}\\n            </fieldset>\\n          </div>\\n          <div fxLayoutAlign=\\\"center center\\\" style=\\\"margin-top:3%\\\">\\n            <fieldset style=\\\"width:100%\\\">\\n                <p> <span>OBJET : </span>{{bonLivraison.objet}}</p>\\n            </fieldset> \\n          </div>\\n          <div fxLayoutAlign=\\\"center center\\\">\\n              <h2>Liste des produits</h2>\\n          </div>\\n          <div>\\n              <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n                  <!-- Checkbox Column -->\\n                  <ng-container matColumnDef=\\\"select\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n                      </mat-checkbox>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\n                      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                                    [checked]=\\\"selection.isSelected(row)\\\">\\n                      </mat-checkbox>\\n                    </td>\\n                  </ng-container>\\n                \\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"code\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Code </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"designation\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Designation </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.designation}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"descriptionProduit\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Description </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.descriptionProduit}} </td>\\n                  </ng-container>\\n      \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"prixUnitaire\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Prix </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.prixUnitaire}} </td>\\n                    </ng-container>\\n\\n                    <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"quantite\\\">\\n                      <th mat-header-cell *matHeaderCellDef> Quantité </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.zoneGeographiqueId}} </td>\\n                    </ng-container>\\n                \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n                      (click)=\\\"selection.toggle(row)\\\">\\n                  </tr>\\n              </table>\\n          </div>\\n          <div fxLayoutAlign=\\\"end right\\\" style=\\\"font-size:20px\\\"><span>Prix total : </span><span style=\\\"color:red\\\">{{totalArticle}} XOF</span></div>\\n      </div>\\n      \\n\\n    </div>\\n    <div fxFlex=\\\"30\\\">\\n        <div fxLayout=\\\"column\\\" fxLayouAlign=\\\"center center\\\">\\n            <div fxLayoutAlign=\\\"center center\\\">\\n                <h2>Detais paiement</h2>\\n            </div>\\n            <mat-card>\\n                <div style=\\\"width:100%\\\">\\n                    Mode livraison : {{bonLivraison.modeLivraison}}\\n                </div> \\n            </mat-card>\\n            &nbsp;\\n            <mat-card>\\n                <div style=\\\"width:100%\\\">\\n                    Livreur : {{livreur.prenom}} {{livreur.nom}}  - {{livreur.telephone}}\\n                </div>\\n            </mat-card>\\n        </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \"","module.exports = \"table {\\n  width: 100%; }\\n\\n.price {\\n  color: red;\\n  font-size: 11px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SessionStorageService } from 'angular-web-storage';\nimport { BlivraisonService } from 'app/service/blivraison.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Utilisateur } from 'app/models/user/utilisateur/utilisateur.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BonLivraison } from 'app/models/msmagasindomains/bon-livraison/bon-livraison.model';\nimport { Fournisseur } from 'app/models/acteur/fournisseur/fournisseur.model';\nimport { MatTableDataSource } from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\n\n\nexport interface PeriodicElement {\n  code: string;\n  designation: string;\n  description: string;\n  prix: string;\n\n}\n\n@Component({\n  selector: 'app-visu-blivraison',\n  templateUrl: './visu-blivraison.component.html',\n  styleUrls: ['./visu-blivraison.component.scss']\n})\nexport class VisuBlivraisonComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'designation', 'descriptionProduit', 'prixUnitaire', 'quantite'];\n  dataSource = new MatTableDataSource<any>();\n  selection = new SelectionModel<PeriodicElement>(true, []);\n  bonLivraison = {} as BonLivraison;\n  fournisseur = {} as Fournisseur;\n  produitDemande  = [];\n  produitList = [];\n  utilisateur : any;\n  livreur : any;\n  agreement : any;\n  totalArticle : number = 0;\n  private produitPath = 'list-produits-db'\n  private selectedProduitPath = 'produits-db'\n\n  constructor(private blivraisonServ: BlivraisonService,\n    public db: AngularFireDatabase,private session: SessionStorageService, private router : Router, private activatedRoute : ActivatedRoute) { \n      \n      this.router = router;\n      var key = this.activatedRoute.snapshot.paramMap.get('id');\n      this.utilisateur = session.get(\"utilisateur\");\n\n      this.db.list('agreement-db', tr =>tr\n      .orderByChild(\"userID\")\n      .equalTo(this.utilisateur.key))\n      .valueChanges()\n      .subscribe(tf => {\n        this.agreement = tf[0];\n      })\n\n      this.db.list(\"blivraison-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(key))\n      .valueChanges()\n      .subscribe(res => {\n        this.bonLivraison =  res[0] as BonLivraison;\n\n      this.db.list(\"fournisseur-db\", db => db\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.livreur))\n      .valueChanges()\n      .subscribe(res => {\n        this.livreur = res[0] as Fournisseur;\n      })\n\n      this.db.list(\"fournisseur-db\", ref => ref\n      .orderByChild('key')\n      .equalTo(this.bonLivraison.fournisseurId))\n      .valueChanges()\n      .subscribe(res => {\n        this.fournisseur = res[0] as Fournisseur;\n\n        this.db.list(this.produitPath, ref => ref\n          .orderByChild('keyDemande')\n          .equalTo(this.bonLivraison.demandeId))\n          .valueChanges()\n          .subscribe(result => {\n            this.produitDemande = result ;\n            this.produitDemande.forEach(t =>{\n              this.db.list(this.selectedProduitPath, refSP => refSP\n                .orderByChild('key')\n                .equalTo(t.keyProd))\n                .valueChanges()\n                .subscribe(prod => {\n                  const data = this.dataSource.data;\n                  prod[0]['zoneGeographiqueId'] = t.quantite;\n                  this.totalArticle = this.totalArticle + prod[0]['zoneGeographiqueId'] * prod[0]['prixUnitaire'];\n                  data.push(prod[0]);\n                  this.dataSource.data = data;  \n                })\n            })\n          })\n        })\n      })\n    }\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected === numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}